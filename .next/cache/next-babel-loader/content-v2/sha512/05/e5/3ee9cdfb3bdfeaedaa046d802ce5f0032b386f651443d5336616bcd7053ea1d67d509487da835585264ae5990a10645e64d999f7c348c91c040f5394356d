{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hayaaqutaishat/Downloads/06-onwards-to-a-bigger-project-starting-project 3/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Hayaa:Heyheyyou1997%40%40@atlascluster.k4pqhv7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find().toArray();\n  console.log(meetups);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  // fetch data from API route\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        title: \"A First Meetup\",\n        address: \"Some address 12, City\",\n        description: \"This is the first meetup\"\n      }\n    }\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/hayaaqutaishat/Downloads/06-onwards-to-a-bigger-project-starting-project 3/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetailPage","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupCollections","collection","meetups","find","toArray","console","log","close","fallback","paths","map","meetup","params","meetupId","_id","toString","getStaticProps","context","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,8GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEAL,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEP,OAAO,CAACQ,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAlBM;AAoBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACLvB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEL,QADM;AAEVrB,QAAAA,KAAK,EACH,wHAHQ;AAIVC,QAAAA,KAAK,EAAE,gBAJG;AAKVC,QAAAA,OAAO,EAAE,uBALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD,CAhBM;AAkBP,eAAeN,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/meetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetailPage = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Hayaa:Heyheyyou1997%40%40@atlascluster.k4pqhv7.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find().toArray();\n\n  console.log(meetups);\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  // fetch data from API route\n  const meetupId = context.params.meetupId;\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        title: \"A First Meetup\",\n        address: \"Some address 12, City\",\n        description: \"This is the first meetup\",\n      },\n    },\n  };\n};\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}